name: Go

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build server
        run: go build -v ./cmd/server/...

      - name: Build cli
        run: go build -v ./cmd/bp-cli/...

      - name: Unit tests
        run: go test -gcflags=-l -v ./...

      - name: Optimization tests
        run: go test -gcflags=-l -v -count=1 -timeout=30s -tags bench ./...

#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v2
#        with:
#          version: v1.36.0
#          args: --timeout=5m -v

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.36
          args: --timeout=5m -v

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go
          # skip-go-installation: true
