// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package protectorpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BruteforceProtectorServiceClient is the client API for BruteforceProtectorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BruteforceProtectorServiceClient interface {
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	ResetLogin(ctx context.Context, in *ResetLoginLimitRequest, opts ...grpc.CallOption) (*ResetLoginLimitResponse, error)
	ResetIP(ctx context.Context, in *ResetIPLimitRequest, opts ...grpc.CallOption) (*ResetIPLimitResponse, error)
	AddAccessListItem(ctx context.Context, in *AddAccessListRequest, opts ...grpc.CallOption) (*AddAccessListResponse, error)
	RemoveAccessListItem(ctx context.Context, in *RemoveAccessListRequest, opts ...grpc.CallOption) (*RemoveAccessListResponse, error)
	GetAccessListItems(ctx context.Context, in *GetAccessListItemsRequest, opts ...grpc.CallOption) (*GetAccessListItemsResponse, error)
}

type bruteforceProtectorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBruteforceProtectorServiceClient(cc grpc.ClientConnInterface) BruteforceProtectorServiceClient {
	return &bruteforceProtectorServiceClient{cc}
}

func (c *bruteforceProtectorServiceClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bruteforceProtectorServiceClient) ResetLogin(ctx context.Context, in *ResetLoginLimitRequest, opts ...grpc.CallOption) (*ResetLoginLimitResponse, error) {
	out := new(ResetLoginLimitResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/ResetLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bruteforceProtectorServiceClient) ResetIP(ctx context.Context, in *ResetIPLimitRequest, opts ...grpc.CallOption) (*ResetIPLimitResponse, error) {
	out := new(ResetIPLimitResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/ResetIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bruteforceProtectorServiceClient) AddAccessListItem(ctx context.Context, in *AddAccessListRequest, opts ...grpc.CallOption) (*AddAccessListResponse, error) {
	out := new(AddAccessListResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/AddAccessListItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bruteforceProtectorServiceClient) RemoveAccessListItem(ctx context.Context, in *RemoveAccessListRequest, opts ...grpc.CallOption) (*RemoveAccessListResponse, error) {
	out := new(RemoveAccessListResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/RemoveAccessListItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bruteforceProtectorServiceClient) GetAccessListItems(ctx context.Context, in *GetAccessListItemsRequest, opts ...grpc.CallOption) (*GetAccessListItemsResponse, error) {
	out := new(GetAccessListItemsResponse)
	err := c.cc.Invoke(ctx, "/bruteforceprotector.BruteforceProtectorService/GetAccessListItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BruteforceProtectorServiceServer is the server API for BruteforceProtectorService service.
// All implementations must embed UnimplementedBruteforceProtectorServiceServer
// for forward compatibility
type BruteforceProtectorServiceServer interface {
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
	ResetLogin(context.Context, *ResetLoginLimitRequest) (*ResetLoginLimitResponse, error)
	ResetIP(context.Context, *ResetIPLimitRequest) (*ResetIPLimitResponse, error)
	AddAccessListItem(context.Context, *AddAccessListRequest) (*AddAccessListResponse, error)
	RemoveAccessListItem(context.Context, *RemoveAccessListRequest) (*RemoveAccessListResponse, error)
	GetAccessListItems(context.Context, *GetAccessListItemsRequest) (*GetAccessListItemsResponse, error)
	mustEmbedUnimplementedBruteforceProtectorServiceServer()
}

// UnimplementedBruteforceProtectorServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBruteforceProtectorServiceServer struct {
}

func (UnimplementedBruteforceProtectorServiceServer) Verify(context.Context, *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) ResetLogin(context.Context, *ResetLoginLimitRequest) (*ResetLoginLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetLogin not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) ResetIP(context.Context, *ResetIPLimitRequest) (*ResetIPLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetIP not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) AddAccessListItem(context.Context, *AddAccessListRequest) (*AddAccessListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAccessListItem not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) RemoveAccessListItem(context.Context, *RemoveAccessListRequest) (*RemoveAccessListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAccessListItem not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) GetAccessListItems(context.Context, *GetAccessListItemsRequest) (*GetAccessListItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccessListItems not implemented")
}
func (UnimplementedBruteforceProtectorServiceServer) mustEmbedUnimplementedBruteforceProtectorServiceServer() {
}

// UnsafeBruteforceProtectorServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BruteforceProtectorServiceServer will
// result in compilation errors.
type UnsafeBruteforceProtectorServiceServer interface {
	mustEmbedUnimplementedBruteforceProtectorServiceServer()
}

func RegisterBruteforceProtectorServiceServer(s grpc.ServiceRegistrar, srv BruteforceProtectorServiceServer) {
	s.RegisterService(&BruteforceProtectorService_ServiceDesc, srv)
}

func _BruteforceProtectorService_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BruteforceProtectorService_ResetLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetLoginLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).ResetLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/ResetLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).ResetLogin(ctx, req.(*ResetLoginLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BruteforceProtectorService_ResetIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetIPLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).ResetIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/ResetIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).ResetIP(ctx, req.(*ResetIPLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BruteforceProtectorService_AddAccessListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAccessListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).AddAccessListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/AddAccessListItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).AddAccessListItem(ctx, req.(*AddAccessListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BruteforceProtectorService_RemoveAccessListItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAccessListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).RemoveAccessListItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/RemoveAccessListItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).RemoveAccessListItem(ctx, req.(*RemoveAccessListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BruteforceProtectorService_GetAccessListItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccessListItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BruteforceProtectorServiceServer).GetAccessListItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bruteforceprotector.BruteforceProtectorService/GetAccessListItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BruteforceProtectorServiceServer).GetAccessListItems(ctx, req.(*GetAccessListItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BruteforceProtectorService_ServiceDesc is the grpc.ServiceDesc for BruteforceProtectorService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BruteforceProtectorService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bruteforceprotector.BruteforceProtectorService",
	HandlerType: (*BruteforceProtectorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Verify",
			Handler:    _BruteforceProtectorService_Verify_Handler,
		},
		{
			MethodName: "ResetLogin",
			Handler:    _BruteforceProtectorService_ResetLogin_Handler,
		},
		{
			MethodName: "ResetIP",
			Handler:    _BruteforceProtectorService_ResetIP_Handler,
		},
		{
			MethodName: "AddAccessListItem",
			Handler:    _BruteforceProtectorService_AddAccessListItem_Handler,
		},
		{
			MethodName: "RemoveAccessListItem",
			Handler:    _BruteforceProtectorService_RemoveAccessListItem_Handler,
		},
		{
			MethodName: "GetAccessListItems",
			Handler:    _BruteforceProtectorService_GetAccessListItems_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}
